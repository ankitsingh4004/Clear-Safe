package com.workorder.app.workorderapplication.activity;

import android.support.v4.app.FragmentActivity;
import android.os.Bundle;

import com.google.android.gms.maps.CameraUpdate;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.LatLngBounds;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;
import com.workorder.app.R;
import com.workorder.app.util.Constants;

import java.util.ArrayList;
import java.util.List;

public class ShowWorkOrderOnMap extends FragmentActivity implements OnMapReadyCallback {

    private GoogleMap mMap;
    List<Marker> markers=new ArrayList<>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_show_work_order_on_map);
        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
                .findFragmentById(R.id.show_work_order_map);
        mapFragment.getMapAsync(this);
    }


    /**
     * Manipulates the map once available.
     * This callback is triggered when the map is ready to be used.
     * This is where we can add markers or lines, add listeners or move the camera. In this case,
     * we just add a marker near Sydney, Australia.
     * If Google Play services is not installed on the device, the user will be prompted to install
     * it inside the SupportMapFragment. This method will only be triggered once the user has
     * installed Google Play services and returned to the app.
     */

    @Override
    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;
        mMap.getUiSettings().setZoomControlsEnabled(true);

        // Add a marker in Sydney and move the camera
      //  LatLng sydney = new LatLng(-34, 151);
        for (int i=0;i< Constants.workOrderList.size();i++)
        {
            double lat=Constants.workOrderList.get(i).getLatitude();
            double lng=Constants.workOrderList.get(i).getLongitude();
            LatLng latLng=new LatLng(lat,lng);
        Marker marker=mMap.addMarker(new MarkerOptions().position(latLng));
        marker.setTitle(Constants.workOrderList.get(i).getAddress1());
        marker.showInfoWindow();
        markers.add(marker);
        }
        //mMap.addMarker(new MarkerOptions().position(sydney).title("Marker in Sydney"));
         if (markers.size()>1)
         {
             int padding = 50;
             LatLngBounds.Builder builder = new LatLngBounds.Builder();
             for (Marker marker : markers) {
                 builder.include(marker.getPosition());
             }
             LatLngBounds bounds = builder.build();
             final CameraUpdate cu = CameraUpdateFactory.newLatLngBounds(bounds, padding);

             mMap.setOnMapLoadedCallback(new GoogleMap.OnMapLoadedCallback() {
                 @Override
                 public void onMapLoaded() {
                     mMap.moveCamera(cu);
                 }
             });

             mMap.setOnMarkerClickListener(new GoogleMap.OnMarkerClickListener() {
                 @Override
                 public boolean onMarkerClick(Marker marker) {
                     mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(marker.getPosition(),7));
                     return false;
                 }
             });


         }

      // mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));
    }
}
