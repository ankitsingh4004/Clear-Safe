package com.workorder.app.activity;

import android.content.Intent;
import android.support.design.widget.FloatingActionButton;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;

import com.workorder.app.R;
import com.workorder.app.pojo.docPOJO.AttachementPOJO;
import com.workorder.app.util.Constants;

import java.util.List;

import es.voghdev.pdfviewpager.library.RemotePDFViewPager;
import es.voghdev.pdfviewpager.library.adapter.PDFPagerAdapter;
import es.voghdev.pdfviewpager.library.remote.DownloadFile;

public class ShowDocumentActivity extends AppCompatActivity implements DownloadFile.Listener {
    String url="http://109.228.49.117:8095/uploads/templates/PDF/";
    String pdfName;
    FloatingActionButton signFab;
    Integer taskId=0;
    private PDFPagerAdapter adapter;
    private FrameLayout fl_container;
    private RemotePDFViewPager viewPager;
    private ProgressBar progress;
    String user_id;
    String status;
    AttachementPOJO attachementPOJO;
    ImageView iv_back;
    TextView tv_title;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_show_document);
        fl_container=findViewById(R.id.frameContainer);
        progress=findViewById(R.id.progressbar);
        signFab = findViewById(R.id.fab_sign);
        iv_back=findViewById(R.id.iv_back);
        tv_title=findViewById(R.id.tv_activity_name);

         try {

             attachementPOJO= (AttachementPOJO) getIntent().getSerializableExtra("Attachment");
           /*  if (attachementPOJO.getStatus().equals("1"))
             {*/
                 signFab.show();
           /*  }else {
                 signFab.hide();
             }*/

             pdfName=attachementPOJO.getDocumentPdfUrl();
             tv_title.setText(pdfName);
             url= Constants.loginPOJO.getBaseUrl()+"uploads/templates/PDF/";
             Log.d("UrlBefore",url);
             url=url+pdfName;
             Log.d("PdfUrl",url);
             try {
                 viewPager = new RemotePDFViewPager(this,url,this);
                 viewPager.getOffscreenPageLimit();
             }catch (Exception e)
             {
                 Log.d("Exception",e.toString());
             }


         }catch (Exception e)
         {
             Log.d("ShowException",e.toString());

         }




    iv_back.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            onBackPressed();
        }
    });



    signFab.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            Intent intent=new Intent(ShowDocumentActivity.this,SignatureActivity.class);
            //Intent intent = new Intent(MapsActivity.this, ShowDocListActivity.class);
            intent.putExtra("AssesmentPOJO", attachementPOJO);

           // startActivity(intent);
            startActivity(intent);
        }
    });

    }

    @Override
    public void onBackPressed() {
        super.onBackPressed();
        finish();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (adapter!=null){
            adapter.close();
        }
    }
    @Override
    public void onSuccess(String url, String destinationPath) {
       try {
           System.out.println(url+"  Ashish:"+destinationPath);
           progress.setVisibility(View.GONE);
           adapter=new PDFPagerAdapter(this,destinationPath);
           viewPager.setAdapter(adapter);
           fl_container.addView(viewPager);

        //   viewPager.setMinimumHeight(250);
     //      viewPager.setMinimumWidth(300);
         //  viewPager.onInterceptHoverEvent(MotionEvent.obtain())

           //fl_container.setFitsSystemWindows(true);
       }catch (Exception e)
       {
          Log.d("Exception",e.toString());
       }


    }

    @Override
    public void onFailure(Exception e) {
        Toast.makeText(this, "Pdf Error", Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onProgressUpdate(int progress, int total) {

        if(progress<total&& this.progress.getVisibility()==View.GONE){
            this.progress.setVisibility(View.VISIBLE);
        }
    }

   /* @Override
    public boolean onTouch(View v, MotionEvent event) {
        viewPager.onInterceptHoverEvent(event);
        return true;
    }
*/

   /* @Override
    public boolean onTouchEvent(MotionEvent event) {
        try {

            viewPager.onInterceptHoverEvent(event);
            viewPager.setMinimumHeight(250);
            viewPager.setMinimumWidth(300);

        }catch (Exception e)
        {
            Log.d("ZoomException",e.toString());
        }

        return  true;
       // return super.onTouchEvent(event);

    }*/
}
